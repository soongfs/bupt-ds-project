<!DOCTYPE html>
<html lang="zh-CN">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>ÊôØÁÇπÊé¢Á¥¢ - TravelMate</title>
  <link
    href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css"
    rel="stylesheet"
  />
  <style>
    /* Add styles for global-nav, logo, nav-links, user-avatar, dropdown-menu etc. here if they are not already globally available */
    /* Assuming these styles are in a global CSS file or already present in attraction-explorer.ejs */
    .global-nav {
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 1rem 5%;
      background: rgba(255, 255, 255, 0.95);
      box-shadow: var(--shadow);
      z-index: 1000;
      height: 60px; /* Adjust as needed */
    }

    .logo {
      font-size: 1.8rem;
      font-weight: 700;
      color: var(--primary);
      transition: transform 0.3s;
      text-decoration: none;
    }

    .nav-links {
      display: flex;
      gap: 2rem;
    }

    .nav-links a {
      color: var(--text);
      text-decoration: none;
      font-weight: 500;
      padding: 0.5rem 1rem;
      border-radius: 20px;
      transition: all 0.3s;
    }

    .nav-links a:hover {
      background: rgba(42, 157, 143, 0.1);
      color: var(--primary);
    }
    /* Basic styles for dropdown, assuming currentUser is available */
    .user-avatar {
        width: 36px;
        height: 36px;
        border-radius: 50%;
        overflow: hidden;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: #f5f5f5;
        border: 2px solid #ddd;
        margin-left: auto; /* Push to the right if no other nav links */
    }
    .avatar-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }
    .avatar-fallback {
        font-weight: bold;
        color: #555;
        font-size: 18px;
    }
    .dropdown-menu {
        position: absolute;
        right: 5%; /* Align with padding */
        top: 60px; /* Below nav */
        width: 200px;
        background: white;
        border-radius: 10px;
        box-shadow: 0 10px 30px rgba(0,0,0,0.15);
        opacity: 0;
        visibility: hidden;
        transform: translateY(-10px);
        transition: all 0.3s ease;
        z-index: 1001;
    }
    .dropdown-menu.show {
        opacity: 1;
        visibility: visible;
        transform: translateY(0);
    }
    .dropdown-item {
        display: flex;
        align-items: center;
        padding: 12px 16px;
        color: var(--text);
        text-decoration: none;
        transition: all 0.2s;
    }
    .dropdown-item i {
        width: 20px;
        margin-right: 12px;
        color: var(--primary);
    }
    .dropdown-item:hover {
        background: rgba(42,157,143,0.1);
        color: var(--primary);
    }
    body {
      padding-top: 60px; /* Adjust to match nav height to prevent content overlap */
    }

      :root {
        --primary: #2a9d8f;
        --secondary: #264653;
        --accent: #e9c46a;
        --text: #444;
        --border: #e0e0e0;
        --shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
      }

      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: "Segoe UI", "PingFang SC", sans-serif;
      }

      body {
        background: #f8f9fa;
        color: var(--text);
        line-height: 1.6;
      }

      /* Á≠õÈÄâÂÆπÂô® */
      .filter-container {
        background: rgba(255, 255, 255, 0.98);
        padding: 1rem 1rem 1rem;
        box-shadow: var(--shadow);
        position: sticky;
        top: 0;
        z-index: 100;
        backdrop-filter: blur(10px);
      }

      /* ÊêúÁ¥¢Ê†è */
      .search-bar {
        position: relative;
        margin-bottom: 1rem;
      }

      .search-input {
        width: 100%;
        padding: 1rem 2rem 1rem 3rem;
        border: 2px solid var(--border);
        border-radius: 30px;
        font-size: 1rem;
        transition: all 0.3s;
      }

      .search-input:focus {
        border-color: var(--primary);
        box-shadow: 0 0 12px rgba(42, 157, 143, 0.2);
        outline: none;
      }

      .search-icon {
        position: absolute;
        left: 1.2rem;
        top: 50%;
        transform: translateY(-50%);
        color: #999;
      }

      /* Á≠õÈÄâÊù°‰ª∂ */
      .filter-group {
        display: flex;
        gap: 0.8rem;
        flex-wrap: wrap;
        margin-bottom: 1rem;
      }

      .filter-btn {
        padding: 0.5rem 1.5rem;
        border: 2px solid var(--border);
        border-radius: 30px;
        background: white;
        cursor: pointer;
        transition: all 0.3s;
        display: flex;
        align-items: center;
        gap: 0.5rem;
      }

      .filter-btn.active {
        border-color: var(--primary);
        background: var(--primary);
        color: white;
      }

      .filter-btn i {
        font-size: 0.9em;
      }

      /* ÊéíÂ∫èÈÄâÈ°π */
      .sort-options {
        display: flex;
        gap: 0.8rem;
        align-items: center;
        padding: 1rem 0;
        border-top: 1px solid var(--border);
      }

      .sort-btn {
        padding: 0.5rem 1.5rem;
        border-radius: 30px;
        background: rgba(42, 157, 143, 0.1);
        color: var(--primary);
        cursor: pointer;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        transition: all 0.3s;
      }

      .sort-btn.active {
        background: var(--primary);
        color: white;
      }

      /* ÊôØÁÇπÂàóË°® */
      .poi-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
        gap: 2rem;
        padding: 2rem;
        max-width: 1200px;
        margin: 0 auto;
      }

      /* ÊôØÁÇπÂç°Áâá */
      .poi-card {
        background: white;
        border-radius: 20px;
        overflow: hidden;
        box-shadow: var(--shadow);
        transition: all 0.3s;
        display: flex;
        flex-direction: column;
        height: 100%;
      }

      .poi-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 24px rgba(0, 0, 0, 0.12);
      }

      .card-image {
        height: 240px;
        background-size: cover;
        background-position: center;
        position: relative;
      }

      .hot-badge {
        position: absolute;
        top: 1rem;
        left: 1rem;
        background: linear-gradient(135deg, var(--primary), #1d7870);
        color: white;
        padding: 0.3rem 1.2rem;
        border-radius: 20px;
        font-size: 0.9rem;
        box-shadow: var(--shadow);
        display: flex;
        align-items: center;
        gap: 0.5rem;
      }

      .hot-badge::before {
        content: "üî•";
      }

      .card-content {
        padding: 1.5rem;
        flex: 1;
        display: flex;
        flex-direction: column;
      }

      .poi-title {
        color: var(--secondary);
        margin: 0 0 1rem;
        font-size: 1.3rem;
        line-height: 1.4;
      }

      .poi-stats {
        display: flex;
        gap: 1.5rem;
        color: #666;
        margin-bottom: 1rem;
        align-items: center;
      }

      .stat-item {
        display: flex;
        align-items: center;
        gap: 0.3rem;
      }

      .poi-desc {
        color: #666;
        margin-bottom: 1.5rem;
        line-height: 1.6;
        display: -webkit-box;
        -webkit-line-clamp: 3;
        -webkit-box-orient: vertical;
        line-clamp: 3;
        overflow: hidden;
        flex-grow: 1;
      }

      .poi-tags {
        display: flex;
        gap: 0.5rem;
        flex-wrap: wrap;
        margin-top: auto;
      }

      .tag {
        background: rgba(42, 157, 143, 0.1);
        color: var(--primary);
        padding: 0.4rem 1rem;
        border-radius: 20px;
        font-size: 0.9rem;
        display: flex;
        align-items: center;
        gap: 0.3rem;
      }

      .tag i {
        font-size: 0.8em;
      }

      /* ÂìçÂ∫îÂºèËÆæËÆ° */
      @media (max-width: 768px) {
        .poi-grid {
          grid-template-columns: 1fr;
          padding: 1rem;
          gap: 1.5rem;
        }

        .filter-container {
          padding: 1.5rem;
        }

        .filter-btn {
          flex: 1 1 120px;
          justify-content: center;
          padding: 0.8rem;
        }

        .sort-options {
          flex-wrap: wrap;
        }
      }

      @media (max-width: 480px) {
        .hot-badge {
          font-size: 0.8rem;
          padding: 0.3rem 1rem;
        }

        .poi-title {
          font-size: 1.2rem;
        }
      }

      /* Êé®ËçêÈÉ®ÂàÜÊ†∑Âºè */
      .recommendations-section {
        padding: 2rem;
        background: linear-gradient(to bottom, rgba(42, 157, 143, 0.1), transparent);
      }

      .section-title {
        color: var(--secondary);
        font-size: 1.5rem;
        margin-bottom: 1.5rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
      }

      .recommendation-badge {
        position: absolute;
        top: 1rem;
        right: 1rem;
        background: linear-gradient(135deg, #2a9d8f, #264653);
        color: white;
        padding: 0.5rem 1rem;
        border-radius: 20px;
        font-size: 0.9rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        box-shadow: var(--shadow);
      }

      .poi-card.recommended {
        border: 2px solid var(--primary);
        transform: scale(1.02);
      }

      .poi-card.recommended:hover {
        transform: translateY(-5px) scale(1.02);
      }

      .user-rating {
        color: var(--primary);
        font-weight: 500;
      }

      a {
        text-decoration: none;
        color: inherit;
      }

      .card-title {
        display: block;
      }
    </style>
</head>
<body>
  <!-- ÂØºËà™Ê†è -->
  <nav class="global-nav">
    <a href="/" class="logo">‚úàÔ∏è TravelMate</a>
    <div class="nav-links">
      <a href="/">È¶ñÈ°µ</a>
      <a href="/attraction/explorer">Êé¢Á¥¢</a>
      <!-- Add other links as needed -->
    </div>
    <% if (currentUser) { %>
      <div class="user-avatar" id="userAvatar">
        <% if (currentUser.avatar) { %>
          <img src="<%= '/uploads/' + currentUser.avatar %>" alt="<%= currentUser.username %>" class="avatar-image">
        <% } else { %>
          <div class="avatar-fallback">
            <%= currentUser.username.charAt(0).toUpperCase() %>
          </div>
        <% } %>
      </div>
      <div class="dropdown-menu" id="dropdownMenu">
        <a href="/user/<%= currentUser.id %>" class="dropdown-item">
          <i class="fas fa-user"></i> ÊàëÁöÑ‰∏ªÈ°µ
        </a>
        <a href="/diary/new" class="dropdown-item">
          <i class="fas fa-pen"></i> ÂÜôÊ∏∏ËÆ∞
        </a>
        <a href="/user/settings" class="dropdown-item">
          <i class="fas fa-cog"></i> ËÆæÁΩÆ
        </a>
        <a href="/logout" class="dropdown-item" id="logoutLink"> <!-- Added ID for JS -->
          <i class="fas fa-sign-out-alt"></i> ÈÄÄÂá∫
        </a>
      </div>
    <% } else { %>
      <a href="/login" class="btn btn-primary" style="margin-left: auto;">ÁôªÂΩï</a>
    <% } %>
  </nav>

  <!-- Á≠õÈÄâÂÆπÂô® -->
  <div class="filter-container">
    <div class="search-bar">
      <i class="fas fa-search search-icon"></i>
      <input
        type="text"
        class="search-input"
        placeholder="ÊêúÁ¥¢ÊôØÁÇπÂêçÁß∞ÊàñÂÖ≥ÈîÆËØç..."
      />
    </div>

    <div class="filter-group">
      <button class="filter-btn <%= currentCategory === 'all' ? 'active' : '' %>"
              onclick="window.location.href='/attraction/explorer?category=all&sort=<%= currentSort %>'">
        <i class="fas fa-map-marker-alt"></i>
        ÂÖ®ÈÉ®ÊôØÁÇπ
      </button>
      <button class="filter-btn <%= currentCategory === 'natural' ? 'active' : '' %>"
              onclick="window.location.href='/attraction/explorer?category=natural&sort=<%= currentSort %>'">
        <i class="fas fa-mountain"></i>
        Ëá™ÁÑ∂È£éÂÖâ
      </button>
      <button class="filter-btn <%= currentCategory === 'historical' ? 'active' : '' %>"
              onclick="window.location.href='/attraction/explorer?category=historical&sort=<%= currentSort %>'">
        <i class="fas fa-landmark"></i>
        ÂéÜÂè≤‰∫∫Êñá
      </button>
      <button class="filter-btn <%= currentCategory === 'landmark' ? 'active' : '' %>"
              onclick="window.location.href='/attraction/explorer?category=landmark&sort=<%= currentSort %>'">
        <i class="fas fa-city"></i>
        ÂüéÂ∏ÇÂú∞Ê†á
      </button>
      <button class="filter-btn <%= currentCategory === 'entertainment' ? 'active' : '' %>"
              onclick="window.location.href='/attraction/explorer?category=entertainment&sort=<%= currentSort %>'">
        <i class="fas fa-gamepad"></i>
        Â®±‰πê‰ºëÈó≤
      </button>
    </div>

    <div class="sort-options">
      <button class="sort-btn <%= currentSort === 'personalized' ? 'active' : '' %>"
              onclick="window.location.href='/attraction/explorer?category=<%= currentCategory %>&sort=personalized'">
        <i class="fas fa-magic"></i>
        ‰∏™ÊÄßÂåñÊé®Ëçê
      </button>
      <button class="sort-btn <%= currentSort === 'my_ratings' ? 'active' : '' %>"
              onclick="window.location.href='/attraction/explorer?category=<%= currentCategory %>&sort=my_ratings'">
        <i class="fas fa-heart"></i>
        ÊàëÁöÑËØÑÂàÜ
      </button>
      <button class="sort-btn <%= currentSort === 'my_views' ? 'active' : '' %>"
              onclick="window.location.href='/attraction/explorer?category=<%= currentCategory %>&sort=my_views'">
        <i class="fas fa-history"></i>
        ÊàëÁöÑÊµèËßà
      </button>
      <button class="sort-btn <%= currentSort === 'hot' ? 'active' : '' %>"
              onclick="window.location.href='/attraction/explorer?category=<%= currentCategory %>&sort=hot'">
        <i class="fas fa-fire"></i>
        ÁÉ≠Â∫¶‰ºòÂÖà
      </button>
      <button class="sort-btn <%= currentSort === 'rating' ? 'active' : '' %>"
              onclick="window.location.href='/attraction/explorer?category=<%= currentCategory %>&sort=rating'">
        <i class="fas fa-star"></i>
        ËØÑÂàÜÊúÄÈ´ò
      </button>
      <button class="sort-btn <%= currentSort === 'distance' ? 'active' : '' %>"
              onclick="window.location.href='/attraction/explorer?category=<%= currentCategory %>&sort=distance'">
        <i class="fas fa-location-dot"></i>
        Ë∑ùÁ¶ªÊúÄËøë
      </button>
    </div>
  </div>

  <!-- Êé®ËçêÊôØÁÇπÈÉ®ÂàÜ -->
  <% if (recommendedAttractions && recommendedAttractions.length > 0) { %>
    <div class="recommendations-section">
      <h2 class="section-title">
        <i class="fas fa-thumbs-up"></i>
        ‰∏∫ÊÇ®Êé®Ëçê
      </h2>
      <div class="poi-grid">
        <% recommendedAttractions.forEach(attraction => { %>
          <a href="/attraction/detail/<%= attraction.id %>" class="poi-card recommended">
            <div class="card-image" style="background-image: url('<%= attraction.cover_image %>')">
              <span class="recommendation-badge">
                <i class="fas fa-thumbs-up"></i>
                Êé®ËçêÊåáÊï∞: <%= Math.round((attraction.recommendation_score || 0) * 100) %>%
              </span>
            </div>
            <div class="card-content">
              <h3 class="poi-title"><%= attraction.name %></h3>
              <div class="poi-stats">
                <div class="stat-item">
                  <i class="fas fa-star"></i>
                  <span><%= attraction.rating.toFixed(1) %></span>
                </div>
                <div class="stat-item">
                  <i class="fas fa-eye"></i>
                  <span><%= attraction.comment_count %></span>
                </div>
                <% if (attraction.user_rating > 0) { %>
                  <div class="stat-item user-rating">
                    <i class="fas fa-heart"></i>
                    <span>ÊÇ®ÁöÑËØÑÂàÜ: <%= attraction.user_rating.toFixed(1) %></span>
                  </div>
                <% } %>
              </div>
              <p class="poi-desc"><%= attraction.description %></p>
              <div class="poi-tags">
                <% if (attraction.inferred_category) { %>
                  <% if (attraction.inferred_category === 'natural') { %>
                    <span class="tag">
                      <i class="fas fa-leaf"></i>
                      Ëá™ÁÑ∂È£éÂÖâ
                    </span>
                  <% } else if (attraction.inferred_category === 'historical') { %>
                    <span class="tag">
                      <i class="fas fa-monument"></i>
                      ÂéÜÂè≤‰∫∫Êñá
                    </span>
                  <% } else if (attraction.inferred_category === 'landmark') { %>
                    <span class="tag">
                      <i class="fas fa-building"></i>
                      ÂüéÂ∏ÇÂú∞Ê†á
                    </span>
                  <% } else if (attraction.inferred_category === 'entertainment') { %>
                    <span class="tag">
                      <i class="fas fa-game"></i>
                      Â®±‰πê‰ºëÈó≤
                    </span>
                  <% } %>
                <% } %>
                <% if (attraction.is_5a) { %>
                  <span class="tag">
                    <i class="fas fa-award"></i>
                    5AÊôØÂå∫
                  </span>
                <% } %>
                <% if (attraction.is_free) { %>
                  <span class="tag">
                    <i class="fas fa-tag"></i>
                    ÂÖçË¥πÂºÄÊîæ
                  </span>
                <% } %>
                <% if (attraction.tags && typeof attraction.tags === 'string') { %>
                  <% try { %>
                    <% const tags = JSON.parse(attraction.tags); %>
                    <% if (Array.isArray(tags)) { %>
                      <% tags.slice(0, 2).forEach(tag => { %>
                        <span class="tag">
                          <i class="fas fa-hashtag"></i>
                          <%= tag %>
                        </span>
                      <% }); %>
                    <% } %>
                  <% } catch(e) { %>
                    <% // Â¶ÇÊûú‰∏çÊòØJSONÊ†ºÂºèÔºåÂ∞ùËØïÊåâÈÄóÂè∑ÂàÜÂâ≤ %>
                    <% const tagList = String(attraction.tags).split(','); %>
                    <% tagList.slice(0, 2).forEach(tag => { %>
                      <% if (tag && tag.trim()) { %>
                        <span class="tag">
                          <i class="fas fa-hashtag"></i>
                          <%= tag.trim() %>
                        </span>
                      <% } %>
                    <% }); %>
                  <% } %>
                <% } %>
                <span class="tag">
                  <i class="fas fa-wallet"></i>
                  ¬•<%= '¬•'.repeat(Math.min(attraction.price_level || 1, 4)) %>
                </span>
                <span class="tag">
                  <i class="fas fa-hourglass-half"></i>
                  <%= Math.floor((attraction.duration || 180) / 60) %>Â∞èÊó∂<%= (attraction.duration || 180) % 60 %>ÂàÜÈíü
                </span>
              </div>
            </div>
          </a>
        <% }); %>
      </div>
    </div>
  <% } %>

  <!-- ÊôØÁÇπÂàóË°® -->
  <div class="poi-grid">
    <% attractions.forEach((attraction, index) => { %>
      <a href="/attraction/detail/<%= attraction.id %>" class="poi-card">
        <div class="card-image" style="background-image: url('<%= attraction.cover_image %>')">
          <% if (index < 6) { %>
            <span class="hot-badge">TOP <%= index + 1 %></span>
          <% } %>
        </div>
        <div class="card-content">
          <h3 class="poi-title"><%= attraction.name %></h3>
          <div class="poi-stats">
            <div class="stat-item">
              <i class="fas fa-star"></i>
              <span><%= attraction.rating.toFixed(1) %></span>
            </div>
            <div class="stat-item">
              <i class="fas fa-eye"></i>
              <span><%= attraction.comment_count %></span>
            </div>
          </div>
          <p class="poi-desc"><%= attraction.description %></p>
          <div class="poi-tags">
            <% if (attraction.inferred_category) { %>
              <% if (attraction.inferred_category === 'natural') { %>
                <span class="tag">
                  <i class="fas fa-leaf"></i>
                  Ëá™ÁÑ∂È£éÂÖâ
                </span>
              <% } else if (attraction.inferred_category === 'historical') { %>
                <span class="tag">
                  <i class="fas fa-monument"></i>
                  ÂéÜÂè≤‰∫∫Êñá
                </span>
              <% } else if (attraction.inferred_category === 'landmark') { %>
                <span class="tag">
                  <i class="fas fa-building"></i>
                  ÂüéÂ∏ÇÂú∞Ê†á
                </span>
              <% } else if (attraction.inferred_category === 'entertainment') { %>
                <span class="tag">
                  <i class="fas fa-game"></i>
                  Â®±‰πê‰ºëÈó≤
                </span>
              <% } %>
            <% } %>
            <% if (attraction.is_5a) { %>
              <span class="tag">
                <i class="fas fa-award"></i>
                5AÊôØÂå∫
              </span>
            <% } %>
            <% if (attraction.is_free) { %>
              <span class="tag">
                <i class="fas fa-tag"></i>
                ÂÖçË¥πÂºÄÊîæ
              </span>
            <% } %>
            <% if (attraction.tags && typeof attraction.tags === 'string') { %>
              <% try { %>
                <% const tags = JSON.parse(attraction.tags); %>
                <% if (Array.isArray(tags)) { %>
                  <% tags.slice(0, 2).forEach(tag => { %>
                    <span class="tag">
                      <i class="fas fa-hashtag"></i>
                      <%= tag %>
                    </span>
                  <% }); %>
                <% } %>
              <% } catch(e) { %>
                <% // Â¶ÇÊûú‰∏çÊòØJSONÊ†ºÂºèÔºåÂ∞ùËØïÊåâÈÄóÂè∑ÂàÜÂâ≤ %>
                <% const tagList = String(attraction.tags).split(','); %>
                <% tagList.slice(0, 2).forEach(tag => { %>
                  <% if (tag && tag.trim()) { %>
                    <span class="tag">
                      <i class="fas fa-hashtag"></i>
                      <%= tag.trim() %>
                    </span>
                  <% } %>
                <% }); %>
              <% } %>
            <% } %>
            <span class="tag">
              <i class="fas fa-wallet"></i>
              ¬•<%= '¬•'.repeat(Math.min(attraction.price_level || 1, 4)) %>
            </span>
            <span class="tag">
              <i class="fas fa-hourglass-half"></i>
              <%= Math.floor((attraction.duration || 180) / 60) %>Â∞èÊó∂<%= (attraction.duration || 180) % 60 %>ÂàÜÈíü
            </span>
          </div>
        </div>
      </a>
    <% }); %>
  </div>

  <!-- ÂÆ¢Êà∑Á´ØÊêúÁ¥¢ÂäüËÉΩ -->
  <script>
    document.querySelector('.search-input').addEventListener('input', (e) => {
      const searchTerm = e.target.value.toLowerCase();
      const cards = document.querySelectorAll('.poi-card');

      cards.forEach(card => {
        const title = card.querySelector('.poi-title').textContent.toLowerCase();
        const desc = card.querySelector('.poi-desc').textContent.toLowerCase();

        if (title.includes(searchTerm) || desc.includes(searchTerm)) {
          card.style.display = 'flex';
        } else {
          card.style.display = 'none';
        }
      });
    });

    // Dropdown menu script (if currentUser is available)
    const userAvatar = document.getElementById('userAvatar');
    const dropdownMenu = document.getElementById('dropdownMenu');
    const logoutLink = document.getElementById('logoutLink');

    if (userAvatar && dropdownMenu) {
        userAvatar.addEventListener('mouseenter', () => {
            dropdownMenu.classList.add('show');
        });

        userAvatar.addEventListener('mouseleave', () => {
            setTimeout(() => {
                if (!dropdownMenu.matches(':hover')) {
                    dropdownMenu.classList.remove('show');
                }
            }, 100);
        });

        dropdownMenu.addEventListener('mouseenter', () => {
            dropdownMenu.classList.add('show');
        });

        dropdownMenu.addEventListener('mouseleave', () => {
            dropdownMenu.classList.remove('show');
        });

        document.querySelectorAll('.dropdown-item').forEach(item => {
            item.addEventListener('click', (e) => {
                if (item.id !== 'logoutLink') { // Prevent default for non-logout links only if they are actual navigations
                    dropdownMenu.classList.remove('show');
                } else {
                    // Handle logout
                    e.preventDefault();
                    window.logout(); 
                }
            });
        });
    }
    
    // Logout function (ensure it's defined or include it)
    if (typeof window.logout === 'undefined') {
        window.logout = async function () {
            console.log("ÈÄÄÂá∫ÁôªÂΩïÂáΩÊï∞Ë¢´Ë∞ÉÁî® (attraction-explorer)");
            try {
                const response = await fetch('/logout', { // Assuming logout is a POST, adjust if GET
                    method: 'POST', 
                    credentials: 'same-origin'
                });
                const data = await response.json();
                if (data.success) {
                    window.location.href = "/";
                } else {
                    console.error("ÁôªÂá∫Â§±Ë¥•:", data.message);
                    alert("ÁôªÂá∫Â§±Ë¥•: " + data.message);
                }
            } catch (error) {
                console.error("ÈÄÄÂá∫ÁôªÂΩïÂ§±Ë¥•:", error);
                alert("ÈÄÄÂá∫ÁôªÂΩïËØ∑Ê±ÇÂ§±Ë¥•.");
            }
        };
    }
  </script>
</body>
</html>