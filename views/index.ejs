<!-- 首页 -->
<!DOCTYPE html>
<html lang="zh-CN">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>TravelMate - 首页</title>
  <style>
    :root {
      --primary: #2a9d8f;
      --secondary: #264653;
      --accent: #e9c46a;
      --text: #444;
      --border: #eee;
      --shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }

    /* 基础重置 */
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: "Segoe UI", "PingFang SC", sans-serif;
    }

    body {
      background: #f8f9fa;
      color: var(--text);
      line-height: 1.6;
    }

    /* 导航栏 */
    .global-nav {
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 1rem 5%;
      background: rgba(255, 255, 255, 0.95);
      box-shadow: var(--shadow);
      z-index: 1000;
    }

    .logo {
      font-size: 1.8rem;
      font-weight: 700;
      color: var(--primary);
      transition: transform 0.3s;
    }

    .nav-links {
      display: flex;
      gap: 2rem;
    }

    .nav-links a {
      color: var(--text);
      text-decoration: none;
      font-weight: 500;
      padding: 0.5rem 1rem;
      border-radius: 20px;
      transition: all 0.3s;
    }

    .nav-links a:hover {
      background: rgba(42, 157, 143, 0.1);
      color: var(--primary);
    }

    .user-avatar {
      width: 40px;
      height: 40px;
      border-radius: 50%;
      background: var(--primary);
      color: white;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      transition: transform 0.3s;
    }

    .card-link {
      display: block;
      text-decoration: none;
      color: inherit;
    }

    /*卡片链接*/
    .card-link:hover {
      opacity: 0.9;
    }



    /* 英雄区域 */
    .hero-section {
      padding: 2rem 2rem 2rem;
      min-height: 80vh;
      background: linear-gradient(135deg,
          rgba(42, 157, 143, 0.9),
          rgba(38, 70, 83, 0.9)),
        url("images/hero-bg.jpg") center/cover;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      text-align: center;
    }

    .title {
      color: white;
      font-size: clamp(2.5rem, 6vw, 3.5rem);
      line-height: 1.2;
      margin-bottom: 2rem;
      text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
    }

    .hero-search {
      width: min(90%, 600px);
      position: relative;
    }

    .hero-search input {
      width: 100%;
      padding: 1.2rem 2rem;
      border: none;
      border-radius: 50px;
      font-size: 1.1rem;
      box-shadow: var(--shadow);
      transition: all 0.3s;
    }

    .hero-search input:focus {
      outline: 2px solid var(--accent);
    }

    .search-btn {
      position: absolute;
      right: 10px;
      top: 50%;
      transform: translateY(-50%);
      padding: 0.8rem 1.5rem;
      border: none;
      border-radius: 30px;
      background: var(--accent);
      color: white;
      cursor: pointer;
      transition: transform 0.3s;
    }

    /* 模糊搜索结果容器样式 */
    .fuzzy-results-container {
      background-color: rgba(255, 255, 255, 0.95); /* 半透明背景 */
      padding: 20px;
      border-radius: 10px;
      margin-top: 15px;
      width: min(90%, 600px);
      box-shadow: 0 5px 15px rgba(0,0,0,0.2);
      text-align: left;
      color: #333;
      position: relative; /* 为了关闭按钮定位 */
    }
    .fuzzy-results-container h4 {
      margin-top: 0;
      margin-bottom: 10px;
      color: var(--secondary-color);
    }
    .fuzzy-results-container ul {
      list-style: none;
      padding: 0;
      margin: 0 0 15px 0;
      max-height: 200px; /* 限制最大高度，出现滚动条 */
      overflow-y: auto;
    }
    .fuzzy-results-container li {
      padding: 8px 0;
      border-bottom: 1px solid #eee;
    }
    .fuzzy-results-container li:last-child {
      border-bottom: none;
    }
    .fuzzy-results-container a {
      text-decoration: none;
      color: var(--primary-color);
      font-weight: 500;
    }
    .fuzzy-results-container a:hover {
      text-decoration: underline;
    }
    .close-fuzzy-btn {
        background-color: var(--accent);
        color: white;
        border: none;
        padding: 8px 15px;
        border-radius: 20px;
        cursor: pointer;
        transition: background-color 0.3s;
        display: block; /* 块级元素方便居中或靠右 */
        margin: 10px auto 0; /* 上方间距，自动左右居中 */
    }
    .close-fuzzy-btn:hover {
        background-color: #d4ac0d;
    }

    /* 分类导航 */
    .category-nav {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
      gap: 1.5rem;
      padding: 0 2rem;
      max-width: 1200px;
      margin: -40px auto 3rem;
    }

    .category-card {
      padding: 1.5rem;
      background: white;
      border-radius: 20px;
      text-align: center;
      box-shadow: var(--shadow);
      transition: all 0.3s;
    }

    .category-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 12px 24px rgba(0, 0, 0, 0.15);
    }

    .category-icon {
      font-size: 2.5rem;
      margin-bottom: 1rem;
    }

    /* 内容瀑布流 */
    .content-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
      gap: 2rem;
      padding: 2rem;
      max-width: 1200px;
      margin: 0 auto;
    }

    .diary-card {
      background: white;
      border-radius: 20px;
      overflow: hidden;
      box-shadow: var(--shadow);
      transition: all 0.3s;
      display: flex;
      flex-direction: column;
    }

    .diary-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2);
    }

    .card-image {
      height: 220px;
      background-size: cover;
      background-position: center;
      position: relative;
    }

    .card-badge {
      position: absolute;
      top: 1rem;
      left: 1rem;
      background: var(--primary);
      color: white;
      padding: 0.3rem 1rem;
      border-radius: 20px;
      font-size: 0.9rem;
    }

    .card-content {
      padding: 1.5rem;
      flex: 1;
      display: flex;
      flex-direction: column;
    }

    .card-content h3 {
      margin: 0 0 1rem;
      font-size: 1.2rem;
      line-height: 1.4;
      flex: 1;
    }

    .user-info {
      display: flex;
      align-items: center;
      gap: 0.8rem;
      margin: 1rem 0;
    }

    .user-avatar {
      width: 40px;
      height: 40px;
      border-radius: 50%;
      object-fit: cover;
      border: 2px solid white;
      box-shadow: var(--shadow);
    }

    .stats {
      display: flex;
      gap: 1.5rem;
      color: #666;
      margin-top: auto;
    }

    .tags {
      display: flex;
      flex-wrap: wrap;
      gap: 0.5rem;
      margin-top: 1rem;
    }

    .tags span {
      background: rgba(42, 157, 143, 0.1);
      color: var(--primary);
      padding: 0.3rem 0.8rem;
      border-radius: 20px;
      font-size: 0.9rem;
    }

    /*用户头像菜单*/
    .user-menu-container {
      position: relative;
      display: inline-block;
    }

    .user-avatar {
      width: 40px;
      height: 40px;
      border-radius: 50%;
      background: var(--primary);
      color: white;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      transition: all 0.3s;
    }

    .user-avatar:hover {
      transform: scale(1.1);
      box-shadow: 0 0 0 3px rgba(42, 157, 143, 0.3);
    }

    .dropdown-menu {
      position: absolute;
      right: 0;
      top: 50px;
      width: 200px;
      background: white;
      border-radius: 10px;
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
      opacity: 0;
      visibility: hidden;
      transform: translateY(-10px);
      transition: all 0.3s ease;
      z-index: 1001;
    }

    .dropdown-menu.show {
      opacity: 1;
      visibility: visible;
      transform: translateY(0);
    }

    .dropdown-item {
      display: flex;
      align-items: center;
      padding: 12px 16px;
      color: var(--text);
      text-decoration: none;
      transition: all 0.2s;
    }

    .dropdown-item i {
      width: 20px;
      margin-right: 12px;
      color: var(--primary);
    }

    .dropdown-item:hover {
      background: rgba(42, 157, 143, 0.1);
      color: var(--primary);
    }

    .dropdown-divider {
      height: 1px;
      background: var(--border);
      margin: 5px 0;
    }

    /* 头像样式 */
    .user-avatar {
      width: 36px;
      height: 36px;
      border-radius: 50%;
      overflow: hidden;
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: center;
      background-color: #f5f5f5;
      border: 2px solid #ddd;
    }

    .avatar-image {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }

    .avatar-fallback {
      font-weight: bold;
      color: #555;
      font-size: 18px;
    }

    /* 登录/未登录元素控制 */
    .auth-only {
      display: none;
    }

    .guest-only {
      display: block;
    }

    .logged-in .auth-only {
      display: block;
    }

    .logged-in .guest-only {
      display: none;
    }

    /* 响应式设计 */
    @media (max-width: 768px) {
      .nav-links {
        display: none;
      }

      .hero-section {
        padding-top: 80px;
        min-height: 60vh;
      }

      .category-nav {
        margin-top: -20px;
      }

      .content-grid {
        padding: 1rem;
        gap: 1.5rem;
      }
    }

    @media (max-width: 480px) {
      .card-content h3 {
        font-size: 1.1rem;
      }

      .stats {
        flex-direction: column;
        gap: 0.5rem;
      }
    }

    a {
      text-decoration: none;
    }

    .diary-title h3 {
      color: #444444;
      text-decoration: none;
      /* 去掉链接的下划线 */
    }

    .card-title h3 {
      color: #444444;
      text-decoration: none;
      /* 去掉链接的下划线 */
    }
  </style>
</head>

<body>
  <!-- 导航栏 -->
  <nav class="global-nav">
    <a href="/" class="logo">✈️ TravelMate</a>
    <div class="nav-links">
      <a href="/">首页</a>
      <a href="/explore">探索</a>
      <a href="/diaries">日记</a>
    </div>
    <% if (currentUser) { %>
      <!-- 已登录状态 -->
      <div class="user-avatar" id="userAvatar">
        <% if (currentUser.avatar) { %>
          <img src="<%= '/uploads/' + currentUser.avatar %>" alt="<%= currentUser.username %>" 
            style="width: 100%; height: 100%; border-radius: 50%; object-fit: cover;">
        <% } else { %>
          <!-- 使用用户名的首字母作为默认头像 -->
          <div class="avatar-fallback">
            <%= currentUser.username.charAt(0).toUpperCase() %>
          </div>
        <% } %>
      </div>
      <div class="dropdown-menu" id="dropdownMenu">
        <a href="/user/<%= currentUser.id %>" class="dropdown-item">
          <i class="fas fa-user"></i> 我的主页
        </a>
        <a href="/diaries/new" class="dropdown-item">
          <i class="fas fa-pen"></i> 写游记
        </a>
        <a href="/user/settings" class="dropdown-item">
          <i class="fas fa-cog"></i> 设置
        </a>
        <a href="/logout" class="dropdown-item">
          <i class="fas fa-sign-out-alt"></i> 退出
        </a>
      </div>
    <% } else { %>
      <!-- 未登录状态 -->
      <a href="/login" class="btn btn-primary" style="margin-left: auto;">登录</a>
    <% } %>
  </nav>

  <!-- 英雄区域 -->
  <section class="hero-section">
    <h1 class="title">探索世界的新方式</h1>
    <div class="hero-search">
      <input type="text" id="searchInput" placeholder="输入景点名称...">
      <button id="searchButton" class="search-btn">开始探索</button>
    </div>
    <!-- 用于显示模糊搜索结果的容器 -->
    <div id="fuzzyResultsContainer" class="fuzzy-results-container" style="display: none;">
      <h4>您是不是想找：</h4>
      <ul id="fuzzyResultsList"></ul>
      <button id="closeFuzzyResults" class="close-fuzzy-btn">关闭</button>
    </div>
  </section>

  <!-- 分类导航 -->
  <div class="category-nav">
    <div class="category-card">
      <div class="category-icon">🏞️</div>
      <a href="/attraction/explorer" class="card-title">
        <h3>景点探索</h3>
      </a>
      <p>发现热门目的地</p>
    </div>
    <div class="category-card">
      <div class="category-icon">🗺️</div>
      <a href="/navigation.html" class="card-title">
        <h3>路线规划</h3>
      </a>
      <p>智能行程安排</p>
    </div>
    <div class="category-card">
      <div class="category-icon">📸</div>
      <a href="/diary-discovery" class="card-title">
        <h3>旅行日记</h3>
      </a>
      <p>记录精彩瞬间</p>
    </div>

  </div>

  <!-- 内容瀑布流 -->
  <main class="content-grid">
    <% diaries.forEach(diary=> { %>
      <article class="diary-card">
        <!--      <a href="/diary-detail/<%= diary.id %>" class="card-link">-->
        <div class="card-image" style="background-image: url('<%= diary.cover_image %>')">
          <span class="card-badge">
            <%= diary.badge %>
          </span>
        </div>
        <div class="card-content">
          <a href="/diary-detail/<%= diary.id %>" class="card-link">
            <h3>
              <%= diary.title %>
            </h3>
          </a>
          <div class="user-info">
            <img src="<%= '/uploads/' + diary.avatar %>" class="user-avatar" alt="用户头像" />
            <span class="user-name">
              <%= diary.username %>
            </span>
          </div>
          <div class="stats">
            <span>❤️ <%= diary.like_count %></span>
            <span>💬 <%= diary.comment_count %></span>
          </div>
          <div class="tags">
            <% if (diary.tags) { %>
              <% diary.tags.split(',').forEach(tag=> { %>
                <span>#<%= tag %></span>
                <% }) %>
                  <% } else { %>
                    <span>#旅行</span>
                    <span>#记录</span>
                    <% } %>
          </div>
        </div>
        <!--        <a>-->
      </article>
      <% }) %>

  </main>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      console.log('调试: DOMContentLoaded event fired on views/index.ejs');
      const nav = document.querySelector(".global-nav");
      if (nav) {
        let lastScrollY = window.scrollY;
        window.addEventListener("scroll", () => {
          if (lastScrollY < window.scrollY && window.scrollY > 80) {
            nav.classList.add("nav-hidden");
          } else {
            nav.classList.remove("nav-hidden");
          }
          lastScrollY = window.scrollY;
        });
      } else {
        console.warn('调试: Navigation element .global-nav not found.');
      }

      console.log('调试: Attempting to find search button and input in views/index.ejs');
      const searchButton = document.getElementById('searchButton');
      const searchInput = document.getElementById('searchInput');
      const fuzzyResultsContainer = document.getElementById('fuzzyResultsContainer');
      const fuzzyResultsList = document.getElementById('fuzzyResultsList');
      const closeFuzzyResultsButton = document.getElementById('closeFuzzyResults');

      console.log('调试: searchButton element in views/index.ejs:', searchButton);
      console.log('调试: searchInput element in views/index.ejs:', searchInput);
      console.log('调试: fuzzyResultsContainer element:', fuzzyResultsContainer);

      if (closeFuzzyResultsButton) {
        closeFuzzyResultsButton.addEventListener('click', () => {
          fuzzyResultsContainer.style.display = 'none';
        });
      }

      if (searchButton && searchInput && fuzzyResultsContainer && fuzzyResultsList) {
        console.log('调试: Search elements FOUND. Attaching listener.');
        searchButton.addEventListener('click', (event) => {
          event.preventDefault(); 
          console.log('调试: Search button CLICKED.');
          const searchTerm = searchInput.value.trim();
          console.log('调试: Search term:', searchTerm);
          
          // 清空并隐藏旧的模糊搜索结果
          fuzzyResultsList.innerHTML = '';
          fuzzyResultsContainer.style.display = 'none';

          if (searchTerm) {
            const fetchUrl = `/attraction/search?name=${encodeURIComponent(searchTerm)}`;
            console.log('调试: Fetching URL:', fetchUrl);
            fetch(fetchUrl)
              .then(response => {
                console.log('调试: Fetch response status:', response.status);
                if (!response.ok) {
                  return response.text().then(text => {
                    console.error('调试: Fetch response error body:', text);
                    throw new Error(`HTTP error! status: ${response.status}, body: ${text}`);
                  });
                }
                return response.json();
              })
              .then(data => {
                console.log('调试: Data received from server:', data);
                if (data.success) {
                  if (data.matchType === 'exact' && data.attractionId) {
                    const redirectUrl = `/attraction/detail/${data.attractionId}`;
                    console.log('调试: Exact match. Redirecting to:', redirectUrl);
                    window.location.href = redirectUrl;
                  } else if (data.matchType === 'fuzzy' && data.attractions && data.attractions.length > 0) {
                    console.log('调试: Fuzzy matches found:', data.attractions);
                    data.attractions.forEach(attraction => {
                      const listItem = document.createElement('li');
                      const link = document.createElement('a');
                      link.href = `/attraction/detail/${attraction.id}`;
                      link.textContent = `${attraction.name} (评分: ${attraction.rating}, 热度: ${attraction.popularity})`;
                      listItem.appendChild(link);
                      fuzzyResultsList.appendChild(listItem);
                    });
                    fuzzyResultsContainer.style.display = 'block';
                  } else if (data.matchType === 'none') {
                    console.log('调试: No matches found (matchType: none).');
                    alert(data.message || '未能找到相关景点，请尝试其他关键词。');
                  } else {
                     // 可能存在未明确处理的成功情况或数据不完整
                    console.warn('调试: Search successful but no clear action taken for matchType:', data.matchType, data);
                    alert('收到未知搜索结果，请稍后再试。');
                  }
                } else { // data.success is false
                  console.error('调试: Search request marked as unsuccessful by server:', data.message);
                  alert(data.message || '搜索失败，请稍后再试。');
                }
              })
              .catch(error => {
                console.error('调试: Fetch request FAILED:', error);
                alert('搜索功能暂时无法使用，请稍后再试。错误详情请查看控制台。');
              });
          } else {
            console.log('调试: Search term is EMPTY.');
            alert('请输入景点名称进行搜索。');
          }
        });
      } else {
        console.error('调试: One or more search-related elements NOT FOUND!');
      }

      // 用户头像下拉菜单
      const userAvatar = document.getElementById('userAvatar');
      const dropdownMenu = document.getElementById('dropdownMenu');
      if (userAvatar && dropdownMenu) {
        userAvatar.addEventListener('mouseenter', () => dropdownMenu.classList.add('show'));
        userAvatar.addEventListener('mouseleave', () => {
          setTimeout(() => {
            if (!dropdownMenu.matches(':hover')) dropdownMenu.classList.remove('show');
          }, 150);
        });
        dropdownMenu.addEventListener('mouseenter', () => dropdownMenu.classList.add('show'));
        dropdownMenu.addEventListener('mouseleave', () => dropdownMenu.classList.remove('show'));
        document.querySelectorAll('.dropdown-item').forEach(item => {
          item.addEventListener('click', () => dropdownMenu.classList.remove('show'));
        });
      } else {
      }
    });
  </script>

  <script src="https://lf-cdn.coze.cn/obj/unpkg/flow-platform/chat-app-sdk/1.2.0-beta.10/libs/cn/index.js"></script>
<script>
  new CozeWebSDK.WebChatClient({
    config: {
      bot_id: '7485755860942110732',
    },
    componentProps: {
      title: 'Coze',
    },
    auth: {
      type: 'token',
      token: 'pat_QRPpeZbkbheuqvhgIwvTXmNhzuR5Z3qZCOd1ZOU3wzF9MO3EMLzL29qdiQH5Juqw',
      onRefreshToken: function () {
        return 'pat_QRPpeZbkbheuqvhgIwvTXmNhzuR5Z3qZCOd1ZOU3wzF9MO3EMLzL29qdiQH5Juqw'
      }
    }
  });
</script>
</body>

</html>